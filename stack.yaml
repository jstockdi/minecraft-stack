AWSTemplateFormatVersion: '2010-09-09'
Description: 'Minecraft Server on AWS EC2'

Parameters:
  Route53ZoneId:
    Type: String
    Description: Value of the Route53 Zone id

Resources:
  MinecraftSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable SSH and Minecraft server port'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 25565
          ToPort: 25565
          CidrIp: 0.0.0.0/0


  MyRoute53Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com 
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: EnderpigsRoute53UpdaterPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "route53:ChangeResourceRecordSets"
                Resource: !Join
                  - ''
                  - - 'arn:aws:route53:::hostedzone/'
                    - !Ref Route53ZoneId

              
  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MyRoute53Role 

  MinecraftServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: m6i.xlarge
      ImageId: ami-079ea43d31a4fb4d8
      KeyName: MinecraftKey
      IamInstanceProfile: !Ref MyInstanceProfile

      SecurityGroups:
        - Ref: MinecraftSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 16 # Size of the EBS volume in GB
      Tags:
        - Key: Name
          Value: MinecraftServer
      UserData:
        Fn::Base64: 
          !Sub 
            - |
              #!/bin/bash

              export ROUTE53_ZONEID=${Route53ZoneId}
              /bin/bash -c "$(curl -sSL https://raw.githubusercontent.com/jstockdi/minecraft-stack/main/install.sh)"  

            - Route53ZoneId: !Ref Route53ZoneId




  BackupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BackupRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: backup.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackupPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref BackupS3Bucket
                    - '/*'


  BackupVault:
    Type: "AWS::Backup::BackupVault"
    Properties:
      BackupVaultName: "MinecraftServerVault"


  BackupPlan:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: MinecraftServerBackupPlan
        BackupPlanRule:
          - RuleName: "DailyBackupRule"
            TargetBackupVault: !Ref BackupVault
            ScheduleExpression: "cron(0 12 ? * * *)"
            StartWindowMinutes: 60
            Lifecycle:
              DeleteAfterDays: 30


  BackupSelection:
    Type: AWS::Backup::BackupSelection
    Properties:
      BackupPlanId: !Ref BackupPlan
      BackupSelection:
        IamRoleArn: !GetAtt BackupRole.Arn
        SelectionName: MinecraftServerBackupSelection
        Resources:
          - !Join
            - ""
            - - "arn:aws:ec2:"
              - !Ref AWS::Region
              - ":"
              - !Ref AWS::AccountId
              - ":instance/"
              - !Ref MinecraftServer



  BackupS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: jstockdi-minecraft-stack-backup


Outputs:
  MinecraftServerArn:
    Description: ARN of the Minecraft server EC2 instance
    Value: !Ref MinecraftServer